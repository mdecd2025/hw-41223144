<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-41223144/content/About.html">https://mdecd2025.github.io/hw-41223144/content/About.html</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41223144">https://github.com/mdecd2025/hw-41223144</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>week</h1>
<h2>w1</h2>
<p>python改版</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="351" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/0InjC3K6Y1Q" title="python 更新" width="651"></iframe></p>
<p></p>
<h2>w3</h2>
<p><span>列出各班目前尚未納入分組的學員名單。</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
 
# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)
 
# 乙班學員資料處理
url = "https://mde.tw/list/2b.txt"
data = open(url).readlines()
all_stud = data[1:]
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']
 
# 顯示乙班標題
print("\n乙班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in b_all_members:
        print(stud_num)</pre>
<h2>w4</h2>
<p><span>可熙連結影片</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/CdMSwvJ9yAo" width="560"></iframe></p>
<h2>w6</h2>
<p><span>如何啟動webots：在本學期可攜程式的start.bat中，已經有在可攜上啟動的程式，只需確認</span><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a><span> 是否壓縮放入可攜套件<span>(</span></span><span><a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a></span><span><span>)</span>的 data 目錄中，如是使用舊版的可攜套件，也可在.bat啟動編碼中自行設定加入：</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">REM for Webots
set PYTHON_PATH=%Disk%:\Python313
  
REM for webots
set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin
  
path=%Disk%:;%path_python%;%path_git%;%path_copsim%;%path_msys2%;%path_miketex%;%path_flutter%;%path_node%;%path_tcc%;%path_postgresql%;%path_range%;%path_lua%;%path_core%;%path_putty%;%path_vscode%;%RUST_PATH%;%path_erlang%;%path_nodejs%;%path_haskell%;%path_scite%;%path_xsltproc%;%path_gnuplot%;%path_openssl%;%path_poppler%;%path_webots%;%path_blender%;%path%;
</pre>
<h2>w8</h2>
<p>複習webots<span> </span><a href="https://cyberbotics.com/doc/reference/solidreference">SolidReference</a><span> 節點的用法說明，用在 Joint 節點的 endPoint 欄位中，用來指向一個現有的 Solid 或靜態環境 &lt;static environment&gt;。通過這種方式，可以閉合機械迴圈。</span></p>
<p><span>當指向一個 Solid 時，唯一的限制是 Solid 和 Joint 必須是某個共同上層 Solid 的下層。</span></p>
<p>意思即是指 SolidReference 是一個引用類型，允許在 Joint 節點的 endPoint 欄位中指定某個目標。</p>
<p>它可以指向兩種類型的對象：</p>
<ol>
<li>現有的 Solid：這是一個具體的實體，但這個 Solid 和 Joint 必須是某個共同上層 Solid 的下層。</li>
<li>靜態環境 &lt;static environment&gt;：這通常指的是不動的參考框架（例如地面或固定基座）</li>
</ol>
<p><span>第一作法：</span></p>
<p><span>若將 fourbar linkage 的 joint4 設置在 base link 的最右端，然後將 joint4 的 endPoint 欄位，設為 SolidReference 指向 link3，即可符合 Soild (link3) 與 Joint (joint4) 都是某個共同上層 Solid (base) 的下層。</span></p>
<p><span>第二作法：</span></p>
<p><span>可以將 fourbar linkage 的 joint4 設置在 link3 的末端，然後將 joint4 的 endPoint 欄位指向<span> </span><span>&lt;static environment&gt;</span>，讓 link3 的末端固定在 ground (其作用與固定在 base 節點相同)。</span></p>
<h2>w9</h2>
<p>其中重點整理</p>
<p>學期前半段重點整理； 我學習到如何建立githup與可攜建立連結，修改ipv6，學習webots</p>
<p>為何要改ipv6呢?</p>
<p>因學校網路環境會<strong data-end="212" data-start="198">封鎖或限制 IPv4</strong> 通訊（例如封鎖 <code data-end="233" data-start="221">github.com</code> 的 IPv4 位址），但沒有限制 IPv6。</p>
<p>wsbotsw是本學期學習重點，目前需要多多練習Tutorial，更加了解webots的各種操作。</p>
<h2>w10</h2>
<p>截至目前已知：</p>
<p><em><strong>1.</strong></em><span> </span>最新的可攜程式系統與套件版本：</p>
<p><a href="http://229.cycu.org/portable_wcm2025_w10.7z">portable_wcm2025.7z</a></p>
<p><em><strong>2.</strong></em><span> </span>已知如何自行建立各種版本的 Python 可攜系統：</p>
<p><a href="https://mdecd2025.github.io/hw-zhe41223118/content/task1.html">個人網站內容</a>、<a href="https://mde.tw/cd2025/content/Portable.html">導師詳解內容</a></p>
<p><em><strong>3.</strong></em><span> </span>已知哪一個版本 SciTE 較為穩定：</p>
<p><span>以 <a href="http://229.cycu.org/wscite_5.5.5.7z">wscite_5.5.5.7z</a> <span>取代 5.5.4 版的 wscite 目錄<span> </span><span>(更新</span></span><span>在 portable_wcm2025.7z 中的 wscite)</span></span></p>
<p><em><strong>4.</strong></em><span> </span>已知如何使用 Codespaces 管理個人與協同分組的倉儲：</p>
<p><span>./init_replit<span> </span><span>(處理 codespaces 上的 python 模組，令其可執行<span> </span><strong>python main.py</strong><span> </span>與<span> </span><strong>python main2.py</strong>)</span></span></p>
<p><strong><em>5.</em></strong><span> </span>已知可以透過 token 或 Github session 管理管理個人與協同分組的倉儲：</p>
<ol>
<li>.git/config 中 url 將 token 放入即可取得權限 (透過 https)</li>
<li>利用 puttygen.exe 建立 keys，然後以 session 取得維護倉儲的權限</li>
</ol>
<p><a href="https://mdecd2025.github.io/hw-zhe41223118/content/task2.html">個人操作過程</a>、<a href="https://mde.tw/cd2025/content/SSH.html">導師步驟</a></p>
<p><strong>6.</strong><span> </span>已知哪一個版本的 Webots 較為穩定：</p>
<p><span>Webots 2025a 有不少 bugs，其中包括操作<span>過程閃退</span>以及<span>無法使用 Transform 節點</span>，因此可以換為 </span><a href="http://229.cycu.org/Webots_2023b.7z">Webots_2023b.7z</a><span><span> </span>版</span></p>
<p><strong><em>7.</em></strong><span> </span>已知如何更新個人與協同分組的倉儲, 以便套用所分配的<span> </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a>啟動網際協同流程：</p>
<p><span>w4 之前的學員作業倉儲版本，無法在 IPv6 位址設定時正確運作，必須下載 </span><a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>，<span>解開壓縮檔案後，替換倉儲中的 cmsimde 目錄，並</span><span>更改 init.py 中將 ip 設為所分配的<span> </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 address</a></span></p>
<p><strong><em>8.</em></strong><span> </span>已知投籃機的零組件可以透過 Solvespace 與 Onshape 繪製，其中前者簡便而後者有利於協同：</p>
<p></p>
<p><strong><em>9.</em></strong><span> </span>已知如何利用 Solid - Shape - Box 或 Solid - CadShape 建立封閉式多連桿機構模擬，(若希望直接更改零組件顏色， 則可以使用 Solid - Shape - Mesh 進行多連桿機構進行組立：</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ER4W2mnCl35Bq4JsHzhoSXABKtOeyi3Qb7hpn_3c0oGRYQ?e=IvaXJF">41223118-fourbar-w10.7z</a>，此檔案內包括了</p>
<ol>
<li><span>直接使用<span> </span><span>Solid - Shape - Mesh</span><span> </span>比較方便直接利用 material 設定零件顏色</span></li>
<li><span>joint4 設於 base 右端, 然後利用 SolidReference<span> </span><span>指向 link3</span></span></li>
<li><span>joint4 設於 link3 末端, 然後利用 SolidReference 指向<span> </span><span>static_environment</span></span></li>
</ol>
<p>三種組立方式</p>
<p><strong><em>10.</em></strong><span> </span>已知可以透過 Solid - Shape - Mesh 中 material 的名稱，以控制器程式改變顏色，進而製作出七段顯示模擬器：</p>
<p>已於 <a href="https://mdecd2025.github.io/hw-zhe41223118/content/Exam3.html">Exam3-2</a> 頁面將七段器變更為能透過webots --stream串流，顯示學號及後面兩碼變換<span>(因同組學員前面學號只有後兩碼不同，所以只有後兩碼數字會隨者操控w s鍵切換) </span></p>
<p><span><strong><em>11.</em></strong><span> </span>已知可以透過 boundingObject 中的 Mesh 設定，讓封閉連桿執行投籃動作，且經由紅外線距離感測紀錄是否得分：</span></p>
<p><span><strong><em>12.</em></strong><span> </span>接下來若要利用各組員所分配的 </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a><span>配置一台具備 https 連線用的網際協同伺服器，建議使用 Virtualbox 或<span> </span></span><a href="https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion">VMWare Workstation</a><span><span> </span>加上 Nginx，Stunnel 或直接採 cmsimde 進行設定</span></p>
<p><span><strong><em>13.</em></strong><span> </span>投籃機與籃框的移動裝置則可採用 </span><a href="https://www.cyberbotics.com/doc/guide/youbot?version=cyberbotics:R2019a-rev1#!">Kuka 套件項下</a><span>的<span> </span></span><a href="https://mde.tw/cd2025/content/Youbot_cart.html">Youbot</a><span><span> </span></span><a href="https://en.wikipedia.org/wiki/Mecanum_wheel">Mecanum</a><span><span> </span>輪底座</span></p>
<p><strong><em>14.</em></strong><span> </span><span>(參考)</span><span> </span>對於 webotsw --stream 在近端啟動伺服器的部分尚未完成, 目前僅能透過官方網站擷取 Webotsview.js, 具體問題在於 webots 串流伺服器啟動後, 不接受跨網域擷取 Webotsview.js, 亦即必須處理伺服器間的 Access-Control-Allow-Origin（CORS）議題. 自行<span> </span><a href="https://github.com/cyberbotics/webots/wiki/Windows-installation/">build webotsw.exe</a><span> </span>應該就可以克服此一問題.</p>
<p><strong><em>15.</em><span> </span></strong><span>(參考)</span><span> </span>另外 Webots stream server 目前僅接受多 client 檢視, 而不支援跨 server 執行 controller 指令, 若要在系統模擬架構下進行多人同步協同 (類似 CoppeliaSim 的串流控制), 則必須自行處理.</p>
<h1>ipv6</h1>
<p>已知 w4 之前的學員作業倉儲版本, 無法在 IPv6 位址設定時正確運作, 各學員必須下載<span> </span><a href="http://229.cycu.org/cmsimde_w4.7z">cmsimde_w4.7z</a>, 解開壓縮檔案後, 替換倉儲中的 cmsimde 目錄.</p>
<p>IPv6 設定:</p>
<p>2a 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:a045<br/>2b 各學員固定 IPv6 分配: 2001:288:6004:17:fff1:cd25:0000:b045<br/>gateway: 2001:288:6004:17::254<br/>dns server:<br/>2001:288:6004:17::3<br/>2001:b000:168::1</p>
<h1>Tutorial</h1>
<h2>Tutorial1</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FrnWZqhBDqk" width="560"></iframe></p>
<h2>Tutorial2</h2>
<p><img alt="" height="409" src="/images/螢幕擷取畫面 2025-05-04 201323.png" width="800"/></p>
<p></p>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p></p>
<p style="padding-left: 30px;"></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 -41223144</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/JNK3w5F0LSY" width="560"></iframe></p>
<p>自我練習:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/53YcyLCR6dA" width="560"></iframe><br/><br/></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p>因為一直閃退先傳一半<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/l1F5RKzvZCw" width="560"></iframe></p>
<p>第二部分<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/l1F5RKzvZCw" width="560"></iframe></p>
<p>第三部分<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/I2etKKAL1jY" width="560"></iframe></p>
<p>結果<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/z5QKwmsoXgw" width="560"></iframe></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/sNcgAlpxd_s" width="560"></iframe></p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>各週網頁內容:</p>
<p>期中心得:</p>
<p>期中自評影片:</p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HRnrXMJCIVw" width="560"></iframe></p>
<p><img alt="" height="400" src="/images/螢幕擷取畫面 2025-06-12 203130.png" width="491"/></p><h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p>因為中途閃退影片分開錄製</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/tsCmJGFtk18" width="560"></iframe></p>
<p>第二部分<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Yt0ERoDHIYk" width="560"></iframe></p>
<p>第三部份</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/iveruSKKlWk" width="560"></iframe></p>
<p><img alt="" height="400" src="/images/螢幕擷取畫面 2025-06-12 204133.png" width="696"/></p>
<p></p>
<p></p><h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>